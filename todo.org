* add bordeaux-threads dep
** add yield
* add spawn
** start new exec with (thread . chan) on stack
** add send / recv
** add join
((+ 1 2) eval send) spawn yield recv swap join
- 3
* add chan word
** push new chan
* add while loop
** eval 0+ times
- (1 2 3) (pop drop) while 
* add until loop
** eval 1+ times
- (1 2 3) nil? (swap pop drop swap) until
