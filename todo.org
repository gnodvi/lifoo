Lifoo

* finish setf support
** add lifoo-push-set macro that creates lambda from expr
*** use in :var
** replace set-nth with set support in nth
** add set support to first / rest

* add fsm
** add fsm init
** implement using tagbody
** fsm macro wraps forms in tagbody
** label macro outputs label
** jump macro pushes (go (first forms))
0 
:start label 
(:end jump) (inc dup 3 >) when
:start jump 
:end label 
fsm

    (lifoo-asseq '(nil . 42)
      :foo var 42 set drop :foo del :foo var cons)

    ;; Sets variable named :foo to 42;
    ;; opens new environment and sets :foo to 43,
    ;; and closes environment and returns value of :foo

    (lifoo-asseq 42
      :foo var 42 set
      begin :foo var 43 set end
      :foo var)
