* lifoo TODO
* add lifoo-word struct
** add word.tracing?
** add lifoo-source word exec
** add lifoo-call word exec
*** compile parsed source on demand
** add source word
** replaces functions on stack
** change compile to return word
* change trace/untrace to take param and act on word
** t untrace untraces all traced
* change arg order in :map?
* change stack to array
** add stack-index
** update push/pop/top
** remove copy-list in :stack
** use (make-array stack-size :adjustable :fill-pointer 0)
** use vector-push-extend and vector-pop
* add backup word
** push copy-sequence to exec.backups
* add restore word
** pop backup and replace stack
* add stash word
** push stack to exec.backups and clear
* add cond word
:failed :ok (1 2 >) cond
- :ok
* add inlining
** inline? flag to lifoo-parse
*** grep all callers and forward
** change parse pull in parsed rep from words
*** inline down to lisp code
