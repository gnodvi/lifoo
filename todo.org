* add bordeaux-threads dep
* add chan word
** push new chan
* add spawn
** $1 is buffer size
** add cl4l-clone package with method like compare
*** map over copy-list for lists
*** cons
*** string
** start new exec with cloned stack to stack
** add send / recv
** add join
*** return val from thread
0 chan ((+ 1 2) eval send :done) spawn swap 
recv swap drop swap 
join cons
- (:done . 3)
* add yield word
* add while loop
** eval 0+ times
- (1 2 3) (pop drop) while 
* add until loop
** eval 1+ times
- (1 2 3) nil? (swap pop drop swap) until
