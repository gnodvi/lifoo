Lifoo
* reimplement get & set as macros
** use setf
** rename get to var
** update tests

* reimplement nth as macro
** replace (val set-nth) with (nth val set) in tests
** remove set-nth

* reimplement first and rest as macros
** add setf rest test

* add special handling for simple conses in lifoo-parse
** call lifoo-eval for first & rest, and cons results

* ---

* add fsm
** add fsm init
** implement using tagbody
** fsm macro wraps forms in tagbody
** label macro outputs label
** jump macro pushes (go (first forms))
0 
:start label 
(:end jump) (inc dup 3 >) when
:start jump 
:end label 
fsm
